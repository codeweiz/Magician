buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }

    // spring-boot-gradle-plugin 插件
    // 管理 org.springframework.boot 和 io.spring.dependency-management 版本号
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.7.4'
    }
}

// 配置所有模块
allprojects {
    group 'cn.microboat'
    version '1.0-SNAPSHOT'

    // 都使用这个仓库
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }
}

// 从 config.gradle 文件中导入配置
apply from: 'config.gradle'

// 配置所有子模块
subprojects {
    // 都使用以下插件
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 依赖引入声明，管理依赖的版本号
    dependencyManagement {
        dependencies {
            for (depJar in rootProject.ext.dependencies) {
                dependency depJar.value
            }
        }
        imports {
            // spring-cloud 依赖
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.4'

            // spring-cloud-alibaba 依赖
            mavenBom 'com.alibaba.cloud:spring-cloud-alibaba-dependencies:2021.1'
        }
    }
}

// 给子模块 Common 配置依赖
project(':Common') {
    dependencies {
        // hutool 工具类
        implementation 'cn.hutool:hutool-all'
        // guava 工具类
        implementation 'com.google.guava:guava'
        // gson
        implementation 'com.google.code.gson:gson'
        // lombok 插件
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        // slf4j 日志
        implementation 'org.slf4j:slf4j-api'
        implementation 'ch.qos.logback:logback-classic'
        // knife4j swagger 升级版
        implementation 'com.github.xiaoymin:knife4j-micro-spring-boot-starter'
        implementation 'com.github.xiaoymin:knife4j-spring-boot-starter'
    }
}

// 给子模块 Gateway 配置依赖
project(':Gateway') {
    dependencies {
        // 引入公共模块
        implementation project(':Common')
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
        implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    }
}

// 给子模块 Modules 的子模块配置公共依赖
project(':Modules') {
    // 所有 Modules 的子模块都配置
    subprojects {
        dependencies {
            // 引入公共模块
            implementation project(':Common')
            implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
            implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
            implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
            implementation 'org.springframework.boot:spring-boot-starter-web'
        }
    }
}

// 给子模块 Modules 的子模块 PurplePoison 配置依赖
project(':Modules:PurplePoison') {
    dependencies {
    }
}

// 给子模块 Modules 的子模块 TaskService 配置依赖
project(':Modules:TaskService') {
    dependencies {
    }
}
