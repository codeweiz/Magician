<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.microboat.dao.TaskRepository">

    <!--  结果集  -->
    <resultMap id="TaskResult" type="cn.microboat.core.pojo.entity.Task">
        <id property="id" column="id"/>
        <result property="taskName" column="task_name"/>
        <result property="taskType" column="task_type"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="location" column="location"/>
        <result property="createAt" column="create_at"/>
        <result property="createBy" column="create_by"/>
        <result property="updateAt" column="update_at"/>
        <result property="updateBy" column="update_by"/>
        <result property="deleteFlag" column="delete_flag"/>
    </resultMap>

    <!--  查询 task 表所有字段  -->
    <sql id="selectTaskVo">
        select id,
               task_name,
               task_type,
               start_time,
               end_time,
               location,
               create_by,
               create_at,
               update_by,
               update_at
        from task
    </sql>

    <!--  根据 id 查询任务信息  -->
    <select id="selectTaskById" parameterType="integer" resultMap="TaskResult">
        <include refid="selectTaskVo"/>
        <where>
            delete_flag = 0
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>

    <!--  查询任务信息列表  -->
    <select id="selectTaskList" parameterType="cn.microboat.core.pojo.entity.Task" resultMap="TaskResult">
        <include refid="selectTaskVo"/>
        <where>
            delete_flag = 0
            <if test="taskName != null and taskName != ''">
                and task_name like concat('%', #{taskName}, '%')
            </if>
            <if test="taskType != null">
                and task_type = #{taskType}
            </if>
            <if test="startTime != null">
                and date_format(start_time, '%y%m%d') >= date_format(#{startTime}, '%y%m%d')
            </if>
            <if test="endTime != null">
                and date_format(end_time, '%y%m%d') >= date_format(#{endTime}, '%y%m%d')
            </if>
        </where>
    </select>

    <!--  新增任务信息  -->
    <insert id="insertTask" parameterType="cn.microboat.core.pojo.entity.Task">
        insert into task (
        <if test="id != null and id != ''">id,</if>
        <if test="taskName != null and taskName != ''">task_name,</if>
        <if test="taskType != null">task_type,</if>
        <if test="startTime != null">start_time,</if>
        <if test="endTime != null">end_time,</if>
        <if test="location != null and location != ''">location,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        delete_flag,
        create_at
        ) values (
        <if test="id != null and id != ''">#{id},</if>
        <if test="taskName != null and taskName != ''">#{taskName},</if>
        <if test="taskType != null">#{taskType},</if>
        <if test="startTime != null">#{startTime},</if>
        <if test="endTime != null">#{endTime},</if>
        <if test="location != null and location != ''">#{location},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        0,
        sysdate()
        )
    </insert>

    <!--  修改任务信息  -->
    <update id="updateTask" parameterType="cn.microboat.core.pojo.entity.Task">
        update task
        <set>
            <if test="taskName != null and taskName != ''">task_name = #{taskName},</if>
            <if test="taskType != null">task_type = #{taskType},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_at = sysdate()
        </set>
        where id = #{id}
    </update>

    <!--  根据 id 删除任务  -->
    <update id="deleteTaskById" parameterType="integer">
        update task
        set delete_flag = 1
        where id = #{id}
    </update>

    <!--  根据 id 列表批量删除任务  -->
    <update id="deleteTaskByIds" parameterType="integer">
        update task set delete_flag = 1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>